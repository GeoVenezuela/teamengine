<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:myparsers="http://www.galdosinc.com/myparsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:csw="http://www.opengis.net/cat/csw"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.occamlab.com/ctl ../../../../../apps/engine/resources/com/occamlab/te/schemas/ctl.xsd">

	<test name="csw:discovery-commons-metadata-get-2.10B">
      <param name="VAR_CSW_GET_CAPABILITIES_HTTP_GET_URL"/>
      <assertion>If the the server recognizes the AcceptFormats parameter, the response entity shall correspond to the most preferred format that the service supports. If none of the content types is supported, the XML representation must be provided instead.</assertion>
      <comment>This test issues a GetCapabilities request using HTTP GET to the CSW server under test. The AcceptFormats parameter has the bogus value 'asdf/asdf' and should result in the latest version capabilities document in the default 'txt/xml' format.</comment>
      <link>csw-2.0.1#discovery-commons-metadata-get-2.10</link>
		<code>
		
			<xsl:variable name="request1">
				<request>
					<url>
						<xsl:value-of select="$VAR_CSW_GET_CAPABILITIES_HTTP_GET_URL"/>
					</url>
					<method>get</method>
					<param name="service">CSW</param>
					<param name="version">2.0.1</param>
					<param name="request">GetCapabilities</param>
					<param name="acceptformats">asdf/asdf</param>
					<parsers:HTTPParser/>
				</request>
			</xsl:variable>
			
			<xsl:if test="not($request1/*)">
				<ctl:fail/>
			</xsl:if>

			<xsl:if test="$request1/*">
				<xsl:variable name="expression">//csw:Capabilities</xsl:variable>
				<ctl:call-test name="ctl:assert-xpath">
					<ctl:with-param name="expr" select="$expression"/>
					<ctl:with-param name="doc" select="$request1"/>
				</ctl:call-test>
				
				<xsl:variable name="content-type" select="$request1/response/headers/header[@name='Content-Type']"/>
				<xsl:if test="not($content-type = 'txt/xml')">
					<ctl:fail/>
				</xsl:if>
			</xsl:if>
				
		</code>
	</test>
</ctl:package>
