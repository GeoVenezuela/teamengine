<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:myparsers="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:wfs="http://www.opengis.net/wfs"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.occamlab.com/ctl ../../../../../apps/engine/resources/com/occamlab/te/schemas/ctl.xsd">

	<test name="wfs:wfs-1.1.0-Basic-GetCapabilities-tc15.1">
      <param name="wfs.GetCapabilities.get.url"/>
      <assertion>Version negotiation using AcceptVersions parameter (preference ordering): Return service metadata corresponding to the most preferred version that is supported. If none of the requested versions are supported, the server must generate an exception with code 'VersionNegotiationFailed'.</assertion>
      <comment>This test issues a GetCapabilities request using HTTP GET to the WFS server under test. The AcceptVersion element is used with a number of versions, one is expected to return ('1.10').</comment>
      <link>ows-1.0.0-metadata-atc4</link>
      <link>OGC 05-008c1, 7.3.2, p.16</link>
		<code>
		
			<xsl:variable name="request1">
				<request>
					<url>
						<xsl:value-of select="$wfs.GetCapabilities.get.url"/>
					</url>
					<method>get</method>
					<param name="service">WFS</param>
					<param name="request">GetCapabilities</param>
					<param name="acceptversions">1.1.0,1.0.0</param>
					<!--<myparsers:XMLValidatingParser.WFS/>-->
				</request>
			</xsl:variable>

			<xsl:choose>
				<xsl:when test="not($request1/*)">
			              	<ctl:fail/>
			              </xsl:when>
			              <xsl:otherwise>
							<xsl:variable name="expression">//wfs:WFS_Capabilities/@version='1.1.0'</xsl:variable>
							<ctl:call-test name="ctl:assert-xpath">
								<ctl:with-param name="expr" select="$expression"/>
								<ctl:with-param name="doc" select="$request1"/>
							</ctl:call-test>
				</xsl:otherwise>
			</xsl:choose>		
			
		</code>
	</test>
</ctl:package>
